/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RecordesRouteImport } from './routes/recordes'
import { Route as ConfrontosRouteImport } from './routes/confrontos'
import { Route as ClassificacaoRouteImport } from './routes/classificacao'
import { Route as CampeoesRouteImport } from './routes/campeoes'
import { Route as TeamIdRouteImport } from './routes/$teamId'
import { Route as IndexRouteImport } from './routes/index'

const RecordesRoute = RecordesRouteImport.update({
  id: '/recordes',
  path: '/recordes',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfrontosRoute = ConfrontosRouteImport.update({
  id: '/confrontos',
  path: '/confrontos',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassificacaoRoute = ClassificacaoRouteImport.update({
  id: '/classificacao',
  path: '/classificacao',
  getParentRoute: () => rootRouteImport,
} as any)
const CampeoesRoute = CampeoesRouteImport.update({
  id: '/campeoes',
  path: '/campeoes',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamIdRoute = TeamIdRouteImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$teamId': typeof TeamIdRoute
  '/campeoes': typeof CampeoesRoute
  '/classificacao': typeof ClassificacaoRoute
  '/confrontos': typeof ConfrontosRoute
  '/recordes': typeof RecordesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$teamId': typeof TeamIdRoute
  '/campeoes': typeof CampeoesRoute
  '/classificacao': typeof ClassificacaoRoute
  '/confrontos': typeof ConfrontosRoute
  '/recordes': typeof RecordesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$teamId': typeof TeamIdRoute
  '/campeoes': typeof CampeoesRoute
  '/classificacao': typeof ClassificacaoRoute
  '/confrontos': typeof ConfrontosRoute
  '/recordes': typeof RecordesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$teamId'
    | '/campeoes'
    | '/classificacao'
    | '/confrontos'
    | '/recordes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$teamId'
    | '/campeoes'
    | '/classificacao'
    | '/confrontos'
    | '/recordes'
  id:
    | '__root__'
    | '/'
    | '/$teamId'
    | '/campeoes'
    | '/classificacao'
    | '/confrontos'
    | '/recordes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TeamIdRoute: typeof TeamIdRoute
  CampeoesRoute: typeof CampeoesRoute
  ClassificacaoRoute: typeof ClassificacaoRoute
  ConfrontosRoute: typeof ConfrontosRoute
  RecordesRoute: typeof RecordesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/recordes': {
      id: '/recordes'
      path: '/recordes'
      fullPath: '/recordes'
      preLoaderRoute: typeof RecordesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/confrontos': {
      id: '/confrontos'
      path: '/confrontos'
      fullPath: '/confrontos'
      preLoaderRoute: typeof ConfrontosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classificacao': {
      id: '/classificacao'
      path: '/classificacao'
      fullPath: '/classificacao'
      preLoaderRoute: typeof ClassificacaoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campeoes': {
      id: '/campeoes'
      path: '/campeoes'
      fullPath: '/campeoes'
      preLoaderRoute: typeof CampeoesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$teamId': {
      id: '/$teamId'
      path: '/$teamId'
      fullPath: '/$teamId'
      preLoaderRoute: typeof TeamIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TeamIdRoute: TeamIdRoute,
  CampeoesRoute: CampeoesRoute,
  ClassificacaoRoute: ClassificacaoRoute,
  ConfrontosRoute: ConfrontosRoute,
  RecordesRoute: RecordesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
